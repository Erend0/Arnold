using NEA.Data;
using System;
using System.Collections.Generic;



namespace NEA.Tasks
{
    public class Workout
    {
        // General variables that will be used to generate the schedule
        private readonly Dictionary<string, string[]> Muscles = new Dictionary<string, string[]>()
        {
                {"Chest",new string[]{"upper","lower","inner"} },
                {"Triceps",new string[]{"longhead","lateralhead","medialhead"} },
                {"Back",new string[]{"lats","middleback","lowerback"} },
                {"Biceps",new string[]{"long","short"} },
                {"Shoulders",new string[]{"anteriordelts","medialdelts","posteriordelts"} },
                {"Legs", new string[] {"Quadriceps","Hamstrings","Glutes","Calves","Abductors"} },
        };
        private int userdays { get; set; }
        private string useraim { get; set; }
        private int usertime { get; set; }
        private string[] chest = { "upper", "lower", "inner" };
        private string[] triceps = { "longhead", "lateralhead", "medialhead" };
        private string[] back = { "lats", "middleback", "lowerback" };
        private string[] biceps = { "long", "short" };
        private string[] shoulders = { "anteriordelts", "medialdelts", "posteriordelts" };
        private string[] legs = { "Quadriceps", "Hamstrings", "Glutes", "Calves", "Abductors" };
        private string[] cardio = { "cardio" };
        private Queue<string[][]> split { get; set; }
        


        // The constructor
        public Workout(string togenerate)
        {
            GetUserData();
            GenerateWorkout(togenerate);

        }
        public void GetUserData()
        {
            // GetLoggedInUser method from the UserRepository is used to fetch the currentley logged in users id from DB
            var userrepo = new UserRepository();
            int currentuserid = Convert.ToInt32(userrepo.GetLoggedInUser());

            // Getuserdata method is used to get the aim, time and days available from the userdata table in the form of a array 
            var userdatarepo = new UserDataRepository();
            string[] userdata = userdatarepo.GetUserData(currentuserid);

            string useraim = userdata[0];
            int usertime = Convert.ToInt32(userdata[1]);
            int userdays = Convert.ToInt32(userdata[2]);


        }
        public void returnsplitqueue()
        {
           
            // full body split 
            // jagged arrays are used to store the muscle groups that will be worked on each day
            if (userdays == 3) {
                string[][]day1 = {chest,triceps, legs };
                string[][] day2 = {back,biceps,shoulders };
                string[][] day3 = { biceps,legs, chest};
                split.Enqueue(day1);
                split.Enqueue(day2);
                split.Enqueue(day3);
                
            }
            else
            {
                string[][] day1 = { chest, triceps };
                string[][] day2 = { back, biceps };
                string[][] day3 = { shoulders };
                string[][] day4 = { legs };
                split.Enqueue(day1);
                split.Enqueue(day2);
                split.Enqueue(day3);
                split.Enqueue(day4);
                if(userdays == 5)
                {
                    string[][] day5 = { cardio };
                    split.Enqueue(day5);
                }  
            }

            
          
        }
       
        public void GenerateWorkout(string togenerate)
        {
            if (togenerate == "all")
            {
                // all the days are individally generated by passing the days into the fillsplit method
                foreach (string[][] day in split)
                {
                    fillsplit(day); 
                }
            }
            // the element in the queue containing the queue will be found 
            else
            {
                string[][] daytoregenerate =determineminormuscles(togenerate);
                fillsplit(daytoregenerate);
                
            }
           
        }
        
        public void fillsplit(string[][] day)
        {
            //the string[][] day contains an array of type strings e.g. Tricep and Chest arrays inside an array 
            // the fillsplit method is also responsible for splitting two major groups in an array 

            
        }
        public string[][] determineminormuscles(string togenerate)
        {
            // using the togenerate find the element on the queue that is to be generated 
            string[][] temp = new string[10][];
            return temp;
               

            
        }
    }   
}
